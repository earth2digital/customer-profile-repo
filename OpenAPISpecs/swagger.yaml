---
swagger: "2.0"
info:
  description: "\nThe profile management microservice enables access to customer data\
    \ to add, update, retrieve or remove customer profiles. \n\nDesign Reference -\
    \ [Customer Profile Management Microservice](https://drive.google.com/file/d/sampleurl/view?usp=sharing)\n\
    \n## Profile management microservice has the following functions:\n- Register\
    \ a new customer\n- Search customers by name\n- Get customer profile by Id\n-\
    \ Update customer profile\n- Delete customer\n\n## Business use case \nCustomer\
    \ receives email for a particular campaign. A URL/web link would be included for\
    \ the customer to click on to take further actions. When the customer clicks on\
    \ the link included in the email, the customer would be redirected to a web page\
    \ where the relevant data (e.g. customer offers) would be displayed.\n\nThe URL\
    \ included in the email would contain  encrypted version of the customer's CRN.\n\
    \n## How the API search logic works?\n1. User submits a request to search customer\
    \ profiles by name\n2. Request gets received and customer data is searched in\
    \ AWS CloudSearch \n3. The search result returned has a summary list of customers\
    \ matching the search criteria\n\n`NOTE: the above search is meant to be used\
    \ to support predictive search feature at the front-end app`\n\n How the API search\
    \ by Id logic works?\n1. User submits a request to search customer profiles by\
    \ name\n2. Request gets received and customer data is searched in AWS DynamoDB\
    \ \n3. The search result returned has the complete profile of the customer with\
    \ all the attributes\n"
  version: "1.0.0"
  title: "Customer Profile Management API"
  contact:
    name: "API Support"
    url: "http://www.example.com/support"
    email: "info@earth2.com.au"
  license:
    name: "MIT License"
    url: "https://opensource.org/licenses/MIT"
host: "virtserver.swaggerhub.com"
basePath: "/Earth2Software/customer-profile-api/1.0.0"
tags:
- name: "01 Profile Queries (Read)"
  description: "Operations available to query customer profile"
schemes:
- "https"
paths:
  /customers:
    get:
      tags:
      - "01 Profile Queries (Read)"
      summary: "searches customers and return a list"
      description: "This API returns a summary list of customers who matches the query\
        \ parameters (name, dob, etc.) from dynamoDB\n"
      operationId: "searchCustomers"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "pass an optional search string for looking up inventory"
        required: false
        type: "string"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/customerList"
        400:
          description: "bad input parameter"
  /customers/{customerId}:
    get:
      tags:
      - "01 Profile Queries (Read)"
      summary: "Get customer profile by id"
      description: "This API returns the API Profile for the customer with the customer\
        \ Id specified by customerId from DynamoDB\n"
      operationId: "getCustomerProfile"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "Numeric ID of the customer to get."
        required: true
        type: "integer"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/customerProfile"
        400:
          description: "bad input parameter"
definitions:
  customerProfile:
    type: "object"
    required:
    - "id"
    - "name"
    - "releaseDate"
    properties:
      id:
        type: "string"
        format: "uuid"
        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
      name:
        type: "string"
        example: "Widget Adapter"
      releaseDate:
        type: "string"
        format: "int32"
        example: "2016-08-29T09:12:33.001Z"
    example:
      releaseDate: "2016-08-29T09:12:33.001Z"
      name: "Widget Adapter"
      id: "d290f1ee-6c54-4b01-90e6-d701748f0851"
  customerList:
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "ACME Corporation"
      homePage:
        type: "string"
        format: "url"
        example: "https://www.acme-corp.com"
      phone:
        type: "string"
        example: "408-867-5309"
    example:
      phone: "408-867-5309"
      name: "ACME Corporation"
      homePage: "https://www.acme-corp.com"
